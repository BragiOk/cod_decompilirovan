# Описание класса Character

Класс `Character` (расположен в `Il2CppScripts.CharacterSystem\Character.cs`) является центральным компонентом для управления любым живым существом в игре, включая персонажей игроков, NPC и монстров. Он содержит методы для управления всеми аспектами их поведения.

## 1. Взаимодействие с целью (Targeting)

-   `public unsafe void SetTarget(IGameEntity target)`
    -   **Описание:** Устанавливает переданный `IGameEntity` в качестве текущей цели для персонажа. Это основная функция для выбора цели.
    -   **Параметры:** `target` - игровой объект (NPC, монстр, другой игрок), который должен стать целью.

-   `public unsafe IGameEntity Target` (Свойство, только для чтения)
    -   **Описание:** Возвращает ��екущую выбранную цель персонажа.

-   `public unsafe IGameEntity AttackTarget` (Свойство, только для чтения)
    -   **Описание:** Возвращает текущую цель для атаки. Может отличаться от `Target`, если персонаж атакует кого-то, но выбрал другую цель.

## 2. Перемещение (Movement)

-   `public unsafe void MoveToLocation(Vector3 position)`
    -   **Описание:** Дает команду персонажу начать движение к указанным мировым координатам.
    -   **Параметры:** `position` - точка в пространстве (`Vector3`), куда должен двигаться персонаж.

-   `public unsafe void MoveToPawn(IGameEntity target, float stopDistance = 0f)`
    -   **Описание:** Дает команду персонажу двигаться к другому игровому объекту (`IGameEntity`).
    -   **Параметры:**
        -   `target`: Целевой объект для движения.
        -   `stopDistance`: Расстояние, на котором персонаж должен остановиться перед целью.

-   `public unsafe void RotateTowards(IGameEntity character, float speed = -1f)`
    -   **Описание:** Поворачивает персонажа лицом к указанной цели.
    -   **Параметры:**
        -   `character`: Цель, к которой нужно повернуться.
        -   `speed`: Скорость поворота.

## 3. Боевые действия (Combat)

-   `public unsafe void UseMagicSkill(IGameEntity target, int skillId, int hitTime)`
    -   **Описание:** Инициирует использование магического умения на цель.
    -   **Параметры:**
        -   `target`: Цель для умения.
        -   `skillId`: ID используемого умения.
        -   `hitTime`: Время до срабатывания эффекта.

-   `public unsafe void BeginAttackTarget(Il2CppStructArray<AttackHit> hits, float time, IGameEntity target)`
    -   **Описание:** Начинает атаку на цель. Этот метод, скорее всего, вызывается после получения подтверждения от сервера.
    -   **Параметры:**
        -   `hits`: Массив структур, описывающих удары.
        -   `time`: Время атаки.
        -   `target`: Цель атаки.

-   `public unsafe void ReceiveHit(AttackHit hit, Character attacker)`
    -   **Описание:** Обрабатывает получение урона персонажем.
    -   **Параметры:**
        -   `hit`: Структура с информацией об ударе.
        -   `attacker`: Персонаж, который нанес удар.

## 4. Состояние и информация

-   `public unsafe void SetPaperdoll(Il2CppScripts.GameTypes.Character.Paperdoll paperdoll)`
    -   **Описание:** Обновляет "бумажную куклу" персонажа, то есть его внешний вид, включая надетую броню и оружие.
    -   **Параметры:** `paperdoll` - объект с информацией о внешнем виде.

-   `public unsafe void SetStatus(StatusUpdate su)`
    -   **Описание:** Обновляет статы персонажа (например, HP, MP, скорость бега) на основе данных из пакета `StatusUpdate`.
    -   **Параметры:** `su` - объект с обновленными параметрами.

-   `public unsafe void Die()`
    -   **Описание:** Запускает процесс смерти персонажа (анимацию, блокировку действий и т.д.).

-   `public unsafe void SocialAction(int actionId)`
    -   **Описание:** Запускает социальное действие (эмоцию), например, танец, приветствие.
    -   **Параметры:** `actionId` - ID социального действия.
